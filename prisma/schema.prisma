generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String       @unique
  image         String?
  posts         Post[]
  messages      Message[]
  likes         Like[]
  interlocutors DialogUser[]
}

model Post {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  image       String? @default("")
  likesCount  Int?    @default(0)
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @db.ObjectId
  likes       Like[]
}

model Message {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  message      String
  user         User        @relation(fields: [userId], references: [id])
  userId       String      @db.ObjectId
  dialogUsers  DialogUser? @relation(fields: [dialogUserId], references: [id])
  dialogUserId String?     @db.ObjectId
}

// model Dialog {
//   id              String    @id @default(auto()) @map("_id") @db.ObjectId
//   interlocutor    User      @relation(fields: [interlocutorsId], references: [id])
//   interlocutorsId String[]  @db.ObjectId
//   messages        Message[]
// }

model Dialog {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  dialogId    String       @unique 
  dialogUsers DialogUser[]
}

model DialogUser {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
  dialog   Dialog    @relation(fields: [dialogId], references: [dialogId])
  dialogId String
  messages Message[]
}

model Like {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  postId String @db.ObjectId
}
